{"version":3,"sources":["webpack:///./src/app/search2/search2-routing.module.ts","webpack:///./src/app/search2/search2.component.css","webpack:///./src/app/search2/search2.component.html","webpack:///./src/app/search2/search2.component.ts","webpack:///./src/app/search2/search2.module.ts","webpack:///./src/app/search2/store/index.ts","webpack:///./src/app/search2/store/search2-state.interface.ts","webpack:///./src/app/search2/store/search2.actions.ts","webpack:///./src/app/search2/store/search2.effects.ts","webpack:///./src/app/search2/store/search2.reducer.ts","webpack:///./src/app/search2/store/search2.selectors.ts"],"names":[],"mappings":"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","file":"app-search2-search2-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Search2Component } from '@app/search2/search2.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: Search2Component\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Search2RoutingModule {\n  static components = [\n    Search2Component\n  ];\n}\n","module.exports = \"input[type=search], select {\\n  width: 60%;\\n  padding: 12px 20px;\\n  margin: 8px 0;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  font-size: 18px;\\n}\\n\\n.searchContainer {\\n  margin: auto;\\n  width: 500px;\\n  border-radius: 5px;\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n  padding-left: 30px;\\n}\\n\\nspan.space {\\n  padding: 1rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoMi9zZWFyY2gyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaDIvc2VhcmNoMi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXRbdHlwZT1zZWFyY2hdLCBzZWxlY3Qge1xuICB3aWR0aDogNjAlO1xuICBwYWRkaW5nOiAxMnB4IDIwcHg7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5zZWFyY2hDb250YWluZXIge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiA1MDBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbn1cblxuc3Bhbi5zcGFjZSB7XG4gIHBhZGRpbmc6IDFyZW07XG59XG4iXX0= */\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n  <h3>Demo 5</h3>\\n</div>\\n\\n<div class =\\\"searchContainer\\\" >\\n  <input [formControl]=\\\"searchControl\\\"  type=\\\"search\\\"  id=\\\"searchbyCountry\\\"  placeholder=\\\"Search Country\\\" >\\n</div>\\n\\n\\n<app-country-table\\n[countries]=\\\"countries$ | async\\\"\\n[errorMessage]=\\\"errorMessage$ | async\\\"\\n[isLoading]=\\\"isLoading$ | async\\\" >\\n</app-country-table>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as fromRoot from '@app/root-store';\nimport { Search2StoreActions, Search2StoreSelectors } from '@app/search2/store';\nimport { Country } from '@core/services/country.model';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search2',\n  templateUrl: './search2.component.html',\n  styleUrls: ['./search2.component.css']\n})\nexport class Search2Component implements OnInit {\n\n  public countries$: Observable<Country[]>;\n  public errorMessage$: Observable<string>;\n  public isLoading$: Observable<boolean>;\n  public searchControl: FormControl;\n\n  constructor(private store$: Store<fromRoot.State>) { }\n\n  ngOnInit() {\n    this.searchControl = new FormControl();\n    this.populateCountries();\n\n    this.isLoading$ = this.store$.pipe(\n      select(Search2StoreSelectors.selectSearch2Loading)\n    );\n\n    this.countries$ = this.store$.pipe(\n      select(Search2StoreSelectors.selectSearch2Countries)\n    );\n\n    this.errorMessage$ = this.store$.pipe(\n      select(Search2StoreSelectors.selectSearch2Error)\n    );\n  }\n\n\n  public populateCountries() {\n    this.searchControl.valueChanges\n      .pipe(\n        map((searchText: string) => searchText && searchText.trim()),\n        filter((searchText: string) => {\n          const filteredResult = searchText.length > 2 && searchText.length < 15;\n          return filteredResult;\n        }),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((searchKey) => {\n        this.store$.dispatch(new Search2StoreActions.Search2CountriesRequest(searchKey));\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Search2RoutingModule } from '@app/search2/search2-routing.module';\nimport { Search2Effects, search2Reducer } from '@app/search2/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    StoreModule.forFeature('search2', search2Reducer),\n    EffectsModule.forFeature(\n      [ Search2Effects ]\n    ),\n    Search2RoutingModule\n  ],\n  declarations: [ Search2RoutingModule.components ]\n})\nexport class Search2Module { }\n","import * as Search2StoreActions from '@app/search2/store/search2.actions';\nimport { Search2Effects } from '@app/search2/store/search2.effects';\nimport { search2Reducer } from '@app/search2/store/search2.reducer';\nimport * as Search2StoreSelectors from '@app/search2/store/search2.selectors';\n\nexport { Search2StoreActions, Search2Effects, search2Reducer, Search2StoreSelectors };\n\n","import * as fromRoot from '@app/root-store';\nimport { Country } from '@core/services/country.model';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\n// state for this feature (search)\nexport interface Search2State extends EntityState<Country> {\n  // additional entities state properties goes here\n  isLoading: boolean;\n  error?: string | null;\n}\n// Method to select primary key. if primary key is 'id' then this is not needed\nexport function selectCountryId(country: Country): string {\n// In this case this would be optional since primary key is id\n  return country.name;\n}\n\n/* A compare function used to sort the collection. The comparer function\nis only needed if the collection needs to be sorted before being displayed.\nSet to false to leave the collection unsorted, which is more performant\nduring CRUD operations. */\nexport function sortByName(a: Country, b: Country): number {\n  return a.name.localeCompare(b.name);\n}\n\nexport const search2Entityadapter: EntityAdapter<Country> = createEntityAdapter<Country>({\n  selectId: selectCountryId,\n  sortComparer: sortByName\n});\n\nexport const initialState: Search2State = search2Entityadapter.getInitialState({\n  isLoading: false,\n  error: null\n});\n\n\n// Out-of-the-box, created entity adapter provides built-in default selectors\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = search2Entityadapter.getSelectors();\n\n\n// Extends the global state to include the search2 feature.\n// This is required because search2 feature module are lazy loaded.\n// So the reference to search2 cannot be added to global state.ts directly.\nexport interface State extends fromRoot.State {\n  search2: Search2State;\n}\n","import { isActionNameUnique } from '@app/root-store';\nimport { Country } from '@core/services/country.model';\nimport { Action } from '@ngrx/store';\n\n// TypeScript enum’s are immutable\nexport enum ActionTypes {\n  SEARCH2_COUNTRIES_REQUEST = '[Search2 Page] Search Countries Request',\n  SEARCH2_COUNTRIES_SUCCESS = '[Search2 Page] Search Countries Success',\n  SEARCH2_COUNTRIES_FAILURE = '[Search2 Page] Search Countries Failure'\n}\n\n// To ensure NgRX actions have unique names across the application.\n// This prevents any duplicate actions being dispatched.\nisActionNameUnique(ActionTypes);\n\nexport class Search2CountriesRequest implements Action {\n  readonly type = ActionTypes.SEARCH2_COUNTRIES_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class Search2CountriesSuccess implements Action {\n  readonly type = ActionTypes.SEARCH2_COUNTRIES_SUCCESS;\n  constructor(public payload: Country[]) {}\n}\n\nexport class Search2CountriesFailure implements Action {\n  readonly type = ActionTypes.SEARCH2_COUNTRIES_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport type Union\n= Search2CountriesRequest\n| Search2CountriesSuccess\n| Search2CountriesFailure;\n","import { Injectable } from '@angular/core';\nimport * as search2Actions from '@app/search2/store/search2.actions';\nimport { Country } from '@core/services/country.model';\nimport { CountryService } from '@core/services/country.service';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class Search2Effects {\n\n  constructor(\n    private countryService: CountryService,\n    private actions$: Actions\n  ) { }\n\n  @Effect()\n  search2CountriesEffects$: Observable<Action> = this.actions$.pipe(\n    ofType<search2Actions.Search2CountriesRequest>(search2Actions.ActionTypes.SEARCH2_COUNTRIES_REQUEST),\n    map((action: search2Actions.Search2CountriesRequest) => action.payload),\n    switchMap((searchKey: string) =>\n      this.countryService.getCountries(searchKey).pipe(\n        map((countries: Country[]) => (new search2Actions.Search2CountriesSuccess(countries))),\n        catchError( (error: string) => of(new search2Actions.Search2CountriesFailure(error)))\n      )\n    )\n  );\n\n}\n","import { ActionTypes, Union } from '@app/search2/store/search2.actions';\nimport { initialState, search2Entityadapter, Search2State } from './search2-state.interface';\n\nexport function search2Reducer(state = initialState, action: Union): Search2State {\n  switch (action.type) {\n\n    case ActionTypes.SEARCH2_COUNTRIES_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case ActionTypes.SEARCH2_COUNTRIES_SUCCESS: {\n      return search2Entityadapter.addAll(action.payload, {\n        ...state,\n        isLoading: false,\n        error: null\n      });\n    }\n\n    case ActionTypes.SEARCH2_COUNTRIES_FAILURE:\n    return {\n      ...state,\n      isLoading: false,\n      error: action.payload,\n    };\n\n    default:\n      return state;\n  }\n}\n","\nimport { Search2State, selectAll } from '@app/search2/store/search2-state.interface';\nimport { Country } from '@core/services/country.model';\nimport { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\n\n// Selector functions\nconst selectSearch2State: MemoizedSelector<object, Search2State>\n  = createFeatureSelector<Search2State>('search2');\n\nexport const selectSearch2Error: MemoizedSelector<object, string> =\ncreateSelector(\n  selectSearch2State,\n  (state: Search2State): string => state.error\n);\n\nexport const selectSearch2Loading: MemoizedSelector<object, boolean> =\ncreateSelector(\n  selectSearch2State,\n  (state: Search2State): boolean => state.isLoading\n);\n// Create the default selectors\nexport const selectSearch2Countries: MemoizedSelector<object,  Country[]> =\ncreateSelector(\n  selectSearch2State,\n  // using created entity adapter's built-in selectors\n  selectAll\n);\n\n"],"sourceRoot":""}