{"version":3,"sources":["webpack:///./src/app/search/search-routing.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/search/search.module.ts","webpack:///./src/app/search/store/index.ts","webpack:///./src/app/search/store/search-state.interface.ts","webpack:///./src/app/search/store/search.actions.ts","webpack:///./src/app/search/store/search.effects.ts","webpack:///./src/app/search/store/search.reducer.ts","webpack:///./src/app/search/store/search.selectors.ts"],"names":[],"mappings":"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","file":"app-search-search-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchComponent } from '@app/search/search.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: SearchComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule {\n  static components = [\n    SearchComponent\n  ];\n}\n","module.exports = \"input[type=search], select {\\n  width: 60%;\\n  padding: 12px 20px;\\n  margin: 8px 0;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  font-size: 18px;\\n}\\n\\n.searchContainer {\\n  margin: auto;\\n  width: 500px;\\n  border-radius: 5px;\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n  padding-left: 30px;\\n}\\n\\nspan.space {\\n  padding: 1rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dFt0eXBlPXNlYXJjaF0sIHNlbGVjdCB7XG4gIHdpZHRoOiA2MCU7XG4gIHBhZGRpbmc6IDEycHggMjBweDtcbiAgbWFyZ2luOiA4cHggMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuLnNlYXJjaENvbnRhaW5lciB7XG4gIG1hcmdpbjogYXV0bztcbiAgd2lkdGg6IDUwMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xufVxuXG5zcGFuLnNwYWNlIHtcbiAgcGFkZGluZzogMXJlbTtcbn1cbiJdfQ== */\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n  <h3>Demo 4</h3>\\n</div>\\n\\n<div class =\\\"searchContainer\\\" >\\n  <input [formControl]=\\\"searchControl\\\"  type=\\\"search\\\"  id=\\\"searchbyCountry\\\"  placeholder=\\\"Search Country\\\" >\\n</div>\\n\\n\\n<app-country-table\\n[countries]=\\\"countries$ | async\\\"\\n[errorMessage]=\\\"errorMessage$ | async\\\"\\n[isLoading]=\\\"isLoading$ | async\\\" >\\n</app-country-table>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as fromRoot from '@app/root-store';\nimport { SearchStoreActions, SearchStoreSelectors } from '@app/search/store';\nimport { Country } from '@core/services/country.model';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  public countries$: Observable<Country[]>;\n  public errorMessage$: Observable<string>;\n  public isLoading$: Observable<boolean>;\n  public searchControl: FormControl;\n\n  constructor(private store$: Store<fromRoot.State>) { }\n\n  ngOnInit() {\n    this.searchControl = new FormControl();\n    this.populateCountries();\n\n    this.isLoading$ = this.store$.pipe(\n      select(SearchStoreSelectors.selectIsLoading)\n    );\n\n    this.countries$ = this.store$.pipe(\n      select(SearchStoreSelectors.selectCountries)\n    );\n\n    this.errorMessage$ = this.store$.pipe(\n      select(SearchStoreSelectors.selectError)\n    );\n  }\n\n\n  public populateCountries() {\n    this.searchControl.valueChanges\n      .pipe(\n        map((searchText: string) => searchText && searchText.trim()),\n        filter((searchText: string) => {\n          const filteredResult = searchText.length > 2 && searchText.length < 15;\n          return filteredResult;\n        }),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((searchKey) => {\n        this.store$.dispatch(new SearchStoreActions.SearchCountriesRequest(searchKey));\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SearchRoutingModule } from '@app/search/search-routing.module';\nimport { SearchEffects, searchReducer } from '@app/search/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    StoreModule.forFeature('search', searchReducer),\n    EffectsModule.forFeature(\n      [ SearchEffects ]\n    ),\n    SearchRoutingModule\n  ],\n  declarations: [ SearchRoutingModule.components ]\n})\nexport class SearchModule { }\n","import * as SearchStoreActions from '@app/search/store/search.actions';\nimport { SearchEffects } from '@app/search/store/search.effects';\nimport { searchReducer } from '@app/search/store/search.reducer';\nimport * as SearchStoreSelectors from '@app/search/store/search.selectors';\n\nexport { SearchStoreActions, SearchEffects, searchReducer, SearchStoreSelectors };\n\n","import * as fromRoot from '@app/root-store';\nimport { Country } from '@core/services/country.model';\n\n// state for this feature (search)\nexport interface SearchState {\n  countries?: Country[] | [];\n  isLoading: boolean;\n  error?: string | null;\n}\n\n// Extends the global state to include the search feature.\n// This is required because search feature module are lazy loaded.\n// So the reference to search cannot be added to global state.ts directly.\nexport interface State extends fromRoot.State {\n  search: SearchState;\n}\n\nexport const initialState: SearchState = {\n  countries: [],\n  isLoading: false,\n  error: null\n};\n\n","import { isActionNameUnique } from '@app/root-store';\nimport { Country } from '@core/services/country.model';\nimport { Action } from '@ngrx/store';\n\n// TypeScript enum’s are immutable\nexport enum ActionTypes {\n  SEARCH_COUNTRIES_REQUEST = '[Search Page] Search Countries Request',\n  SEARCH_COUNTRIES_SUCCESS = '[Search Page] Search Countries Success',\n  SEARCH_COUNTRIES_FAILURE = '[Search Page] Search Countries Failure'\n}\n\n// To ensure NgRX actions have unique names across the application.\n// This prevents any duplicate actions being dispatched.\nisActionNameUnique(ActionTypes);\n\nexport class SearchCountriesRequest implements Action {\n  readonly type = ActionTypes.SEARCH_COUNTRIES_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class SearchCountriesSuccess implements Action {\n  readonly type = ActionTypes.SEARCH_COUNTRIES_SUCCESS;\n  constructor(public payload: Country[]) {}\n}\n\nexport class SearchCountriesFailure implements Action {\n  readonly type = ActionTypes.SEARCH_COUNTRIES_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport type Union\n= SearchCountriesRequest\n| SearchCountriesSuccess\n| SearchCountriesFailure;\n","import { Injectable } from '@angular/core';\nimport * as searchActions from '@app/search/store/search.actions';\nimport { Country } from '@core/services/country.model';\nimport { CountryService } from '@core/services/country.service';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class SearchEffects {\n\n  constructor(\n    private countryService: CountryService,\n    private actions$: Actions\n  ) { }\n\n  @Effect()\n  searchCountriesEffects$: Observable<Action> = this.actions$.pipe(\n    ofType<searchActions.SearchCountriesRequest>(searchActions.ActionTypes.SEARCH_COUNTRIES_REQUEST),\n    map((action: searchActions.SearchCountriesRequest) => action.payload),\n    switchMap((searchKey: string) =>\n      this.countryService.getCountries(searchKey).pipe(\n        map((countries: Country[]) => (new searchActions.SearchCountriesSuccess(countries))),\n        catchError( (error: string) => of(new searchActions.SearchCountriesFailure(error)))\n      )\n    )\n  );\n\n}\n","import { initialState, SearchState } from '@app/search/store/search-state.interface';\nimport { ActionTypes, Union } from '@app/search/store/search.actions';\n\nexport function searchReducer(state = initialState, action: Union): SearchState {\n  switch (action.type) {\n\n    case ActionTypes.SEARCH_COUNTRIES_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        countries: [],\n        error: null\n      };\n\n    case ActionTypes.SEARCH_COUNTRIES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        countries: action.payload,\n        error: null\n      };\n\n    case ActionTypes.SEARCH_COUNTRIES_FAILURE:\n    return {\n      ...state,\n      isLoading: false,\n      countries: [],\n      error: action.payload,\n    };\n\n    default:\n      return state;\n  }\n}\n","\nimport { SearchState } from '@app/search/store/search-state.interface';\nimport { Country } from '@core/services/country.model';\nimport { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\n\n// Selector functions\nconst selectSearchState: MemoizedSelector<object, SearchState>\n  = createFeatureSelector<SearchState>('search');\n\nexport const selectCountries: MemoizedSelector<object, Country[]> = createSelector(\n  selectSearchState,\n  (state: SearchState): Country[] => state.countries\n);\n\nexport const selectError: MemoizedSelector<object, string> = createSelector(\n  selectSearchState,\n  (state: SearchState): string => state.error\n);\n\nexport const selectIsLoading: MemoizedSelector<object, boolean> = createSelector(\n  selectSearchState,\n  (state: SearchState): boolean => state.isLoading\n);\n"],"sourceRoot":""}